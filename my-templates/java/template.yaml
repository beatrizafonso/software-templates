apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: java-template
  title: Java Application
  description: Create a GitHub Repository with automated CI and terraform triggers for Java Applications.
  tags:
    - cicd
    - terraform
    - repository
    - java
    - kubernetes
spec:
  owner: beatrizafonso@wine.com.br
  type: service
  
  parameters:
    - title: Metadata
      required:
        - component_id
        - description
        - technical_lead
        - owner
      properties:
        component_id:
          title: Component Name
          type: string
          description: Unique name of the component

        description:
          title: Component Description
          type: string
          description: Help others understand what this service is for.

        # team:
        #   title: Team Name
        #   type: string
        #   description: Team Name
        #   ui:field: TeamPicker

        technical_lead:
          title: Technical Leader
          type: string
          description: Technical Leader Name

        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds: 
              - Group           ######## NAO TA FUNCIONANDO


    - title: Application
      required:
        - country
        - javaVersion
        - application_name
        - lifecycle
        - health_check
      properties:

        application_name:
          title: Application Name
          type: string
          description: Application Name

        lifecycle:
          title: Lifecycle
          type: string
          default: staging
          enum:
            - production
            - staging
        country:
          title: Country
          type: string
          default: BR
          enum:
            - BR
            - MX
          enumNames:
            - Brasil
            - Mexico

        javaVersion:
          title: Java Version
          type: string
          default: openjdk:15.0.1-jdk
          enum:
            - openjdk:15.0.1-jdk
            - openjdk:8
            - openjdk:8-jdk 
            - openjdk:8u131-jdk-alpine
            - openjdk:jre-alpine3.8
        
        health_check:
          title: Application Health Check path
          type: string
          description: Make sure this path exists in your application.
          ui:options:
            defaultValue: /       ##### NAO TA FUNCIONANDO

        envs:
          title: Environment Variables
          description: Application Environment Variables
          type: array
          required:
            - envName
            - envValue
          items:
            type: object
            properties:
              envName:
                type: string
                title: Env Name
              envValue:
                type: string
                title: Env Value


        secrets:
          title: Secrets
          description: Application Secrets
          type: array
          required:
            - secretName
            - secretValue
          items:
            type: object
            properties:
              secretName:
                type: string
                title: Secret Name
              secretValue:
                type: string
                title: Secret Value
                # ui:widget: password

    - title: Kubernetes
      required:
        - k8s_namespace
        - k8s_svc_port
        - k8s_pod_replicas
        # - k8s_hpa_prod
        # - ingress
      properties:
        k8s_namespace:
          title: Kubernetes Namespace
          type: string
          ui:options:
            defaultValue: default

        k8s_svc_port:
          title: Service Port
          type: number
          default: 8080

        k8s_pod_replicas:
          title: Total Replicas
          type: number
          default: 1

        # ingress:
        #   title: Ingress
        #   type: string
        #   description: Name for java runtime.
        #   default: internal-ingress
        #   enum:
        #     - internal-ingress
        #     - external-ingress


        # Enable HPA?

        # k8s_hpa_prod:
        #   title: Horizontal Pod AutoScaler (Production)
        #   type: object
        #   required:
        #     - k8s_hpa_mem_au_prod
        #     - k8s_hpa_cpu_au_prod
        #     - k8s_hpa_min_replicas_prod
        #     - k8s_hpa_max_replicas_prod
        #   properties:
        #     k8s_hpa_min_replicas_prod:
        #       title: Min Replicas
        #       type: number
        #       default: 2
        #     k8s_hpa_max_replicas_prod:
        #       title: Max Replicas
        #       type: number
        #       default: 4
        #     k8s_hpa_mem_au_prod:
        #       title: Cpu Utilization
        #       type: number
        #       default: 65
        #     k8s_hpa_cpu_au_prod:
        #       title: Memory Utilization
        #       type: number
        #       default: 65


        # k8s_hpa_stg:
        #   title: Horizontal Pod AutoScaler (Staging)
        #   type: object
        #   required:
        #     - k8s_hpa_mem_au_stg
        #     - k8s_hpa_cpu_au_stg
        #     - k8s_hpa_min_replicas_stg
        #     - k8s_hpa_max_replicas_stg
        #   properties:
        #     k8s_hpa_min_replicas_stg:
        #       title: Min Replicas
        #       type: number
        #       default: 1
        #     k8s_hpa_max_replicas_stg:
        #       title: Max Replicas
        #       type: number
        #       default: 2
        #     k8s_hpa_mem_au_stg:
        #       title: Cpu Utilization
        #       type: number
        #       default: 80
        #     k8s_hpa_cpu_au_stg:
        #       title: Memory Utilization
        #       type: number
        #       default: 80

    - title: Choose a location  
      required:
        - repoUrl
      properties: 
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: template
      name: Fetch template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }} 
          javaVersion: ${{ parameters.javaVersion }}
          country: ${{ parameters.country }}
          application_name: ${{ parameters.application_name }}
          k8s_pod_replicas: ${{ parameters.k8s_pod_replicas }}
          k8s_svc_port: ${{ parameters.k8s_svc_port }}
          k8s_namespace: ${{ parameters.k8s_namespace }}
          repoApplicationName: ${{ getRepositoryName parameters.repoUrl }}
          health_check: ${{ parameters.health_check }}
          envs: ${{ parameters.envs }}
          secrets: ${{ parameters.secrets }}

    - id: publishrepo
      name: Publish New Git Repository
      action: publish:github
      input:
        sourcePath: 'main'
        allowedHosts:
          - github.com
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: createstaging
      name: Creating staging Branch
      action: publish:github:pull-request
      input:
        sourcePath: 'staging'
        owner: ${{ parameters.owner }}
        repoUrl: ${{ parameters.repoUrl }}
        title: 'Creating staging branch'
        branchName: 'staging'
        description: |
          # Staging environment created. 
          Please, close this Pull Request

    - id: cloneMain-tf
      name: Clone main.tf file
      action: winecombr:clone:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.name }}
        repoUrl: github.com?owner=winecombr&repo=devops
        repoPath: 'terraform/ci-gcp/main.tf'

    - id: fetch-trigger
      name: Fetch Trigger
      action: fetch:template
      input:
        url: ./trigger
        values:
          owner: 'beatrizafonso'
          destination: 'github.com?owner=beatrizafonso&repo=fluxMigration'
          repo_name: ${{ getRepositoryName parameters.repoUrl }}

    - id: publish-pull-request-main-tf
      name: Publish Pull Request main.tf
      action: winecombr:github:pull-request
      input:
        repoName: ${{ parameters.repo_name }}
        targetPath: 'terraform/ci-gcp'
        sourcePath: 'terraform/ci-gcp'
        clonedRepoPath: 'terraform/ci-gcp/main.tf'
        owner: 'beatrizafonso'
        repoUrl: 'github.com?owner=beatrizafonso&repo=fluxMigration'
        title: 'Create new trigger: ${{ parameters.repo_name }}'
        branchName: 'create-trigger-${{ parameters.repo_name }}'
        description: |
          # New trigger: ${{ parameters.repo-name }}

          {{#if parameters.shortDescription}}
          ${{ parameters.shortDescription }}
          {{/if}}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publishrepo.output.repoContentsUrl }}$
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
      - url: ${{ steps.publish-pull-request.output.remoteUrl }}
        text: 'Go to PR'