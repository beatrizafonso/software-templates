apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: java-template
  title: Java Application
  description: Create a GitHub Repository with automated CI and terraform triggers for Java Applications.
  tags:
    - cicd
    - terraform
    - repository
    - java
    - kubernetes
spec:
  owner: beatrizafonso@wine.com.br
  type: service
  
  parameters:
    - title: Metadata
      required:
        - component_id
        - description
        - technical_lead
        - owner
      properties:
        component_id:
          title: Component Name
          type: string
          description: Unique name of the component
          customFormats: [a-zA-Z-0-9]

        description:
          title: Component Description
          type: string
          description: Help others understand what this service is for.

        # team:
        #   title: Team Name
        #   type: string
        #   description: Team Name
        #   ui:field: TeamPicker

        technical_lead:
          title: Technical Leader
          type: string
          description: Technical Leader Name

        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds: 
              - Group           ######## NAO TA FUNCIONANDO


    - title: Application
      required:
        - country
        - javaVersion
        - application_name
        - lifecycle
        - health_check
      properties:

        application_name:
          title: Application Name
          type: string
          description: Application Name
        #TODO analisar se realmente precisa desse campo, pq nao deixar o mesmo que "Component Name"

        lifecycle:
          title: Lifecycle
          type: string
          default: staging
          enum:
            - production
            - staging
          
          #TODO pode gerar dupla interpretação, no inicio toda aplicação vai estar na fase de homologação...
          # criar hrs para prd e hmg logo? 
        country:
          title: Country
          type: string
          default: BR
          enum:
            - BR
            - MX
          enumNames:
            - Brasil
            - Mexico

        javaVersion:
          title: Java Version
          type: string
          default: openjdk:15.0.1-jdk
          enum:
            - openjdk:15.0.1-jdk
            - openjdk:8
            - openjdk:8-jdk 
            - openjdk:8u131-jdk-alpine
            - openjdk:jre-alpine3.8
        
        health_check:
          title: Application Health Check path
          type: string
          description: Make sure this path exists in your application.
          default: /       ##### NAO TA FUNCIONANDO
          customFormats: [a-zA-Z-/0-9]

        envs:
          title: Environment Variables
          description: Application Environment Variables
          type: array
          required:
            - envName
            - envValue
          items:
            type: object
            properties:
              envName:
                type: string
                title: Env Name
                description: Only letters in uppercase and _.
                customFormats: [A-Z_]
              envValue:
                type: string
                title: Env Value
        
        #TODO analisar se é melhor colocar a dockerfile como input 
        dockerfile:
          title: Application Dockerfile
          description: A Dockerfile to build the application
          type: string

        secrets:
          title: Secrets
          description: Environment variables that must be secrets
          type: array
          required:
            - secretName
            - secretValue
          items:
            type: object
            properties:
              secretName:
                type: string
                title: Secret Name
                description: Only letters in uppercase and _.
                customFormats: [A-Z_]
              secretValue:
                type: string
                title: Secret Value
                # ui:widget: password

    - title: Kubernetes
      required:
        - k8s_namespace
        - k8s_svc_port
        - k8s_pod_replicas
        # - k8s_hpa_prod
        # - ingress
      properties:
        k8s_namespace:
          title: Kubernetes Namespace
          type: string
          ui:options:
            defaultValue: default
          customFormats: [a-z-]

        k8s_svc_port:
          title: Service Port
          type: number
          default: 8080

        k8s_pod_replicas:
          title: Total Replicas
          type: number
          default: 1

        kind_resource:
          title: "The service will be deployed as a:"
          type: string
          default: Deployment
          enum:
            - Deployment
            - Statefulset

        imageAutomation:
          title: "Enable automated version update?"
          type: string
          default: "Yes"
          enum:
            - "Yes"
            - "No"

        ingress:
          title: Ingress
          type: object
          required:
          - ingress_conditional
          properties:
            ingress_conditional:
              title: Enable Ingress?
              type: string
              enum:
                - "no"
                - "one"
                - "mutiple"
              enumNames:
                - 'No'
                - 'Yes: One'
                - 'Yes: More than one'
              default: "no"
          dependencies:
            ingress_conditional:
              oneOf:
              - properties:
                  ingress_conditional:
                    enum:
                    - "no"
              - properties:
                  ingress_conditional:
                    enum:
                    - "one"
                  k8s_ingress_host:
                    title: Host URL
                    type: string
                    description: "Subdomain only. Example: <subdomain>.wine.com.br"
                    customFormats: [a-zA-Z-0-9]
                  k8s_ingress_class:
                    title: Ingress Class
                    type: string
                    enum:
                      - internal-ingress
                      - external-ingress
                    default: internal-ingress
                required: 
                - k8s_ingress_host
                - k8s_ingress_class
              - properties:
                  ingress_conditional:
                    enum:
                    - "mutiple"
                  k8s_ingress_host:
                    title: Host URL
                    type: array
                    customFormats: [a-zA-Z-0-9]
                    items:
                      type: string
                      description: "Subdomain only. Example: <subdomain>.wine.com.br"
                  k8s_ingress_class:
                    title: Ingress Class
                    type: string
                    enum:
                      - internal-ingress
                      - external-ingress
                    default: internal-ingress
                required:
                - k8s_ingress_host
                - k8s_ingress_class

    - title: Dependencies
      properties:
  
        PostgreSQL:
          type: object
          required:
          - enablePostgreSQL
          properties:
            enablePostgreSQL:
              title: Enable Postgresql?
              type: string
              enum:
                - "yes"
                - "no"
              default: "no"
          dependencies:
            enablePostgreSQL:
              oneOf:
              - properties:
                  enablePostgreSQL:
                    enum:
                    - "no"
              - properties:
                  enablePostgreSQL:
                    enum:
                    - "yes"
                  postgresql_version:
                    title: Version
                    type: string
                    enum:
                      - 11.14.0-debian-10-r17
                      - 14.2.0-debian-10-r58
                    enumNames:
                      - "11.14.0-debian-10-r17"
                      - "14.2.0-debian-10-r58"
                    default: 14.2.0-debian-10-r58
                    required:
                    - postgresql_version

                  postgresqlPersistenceSize:
                    title: Persistence Size
                    type: string
                    enum:
                      - 8Gi
                      - 16Gi
                      - 24Gi
                      - 32Gi
                    default: 8Gi
                    required:
                    - postgresqlPersistenceSize

                  PostgresqlUser:
                    title: PostgreSQL User
                    type: object
                    required:
                    - enablePostgresqlUser
                    properties:
                      enablePostgresqlUser:
                        title: Enable PostgreSQL user?
                        description: "user: postgresql"
                        type: string
                        enum:
                          - "yes"
                          - "no"
                        default: "no"
                    dependencies:                  
                      enablePostgresqlUser:
                        oneOf:
                        - properties:
                            enablePostgresqlUser:
                              enum:
                              - "no"
                        - properties:
                            enablePostgresqlUser:
                              enum:
                              - "yes"
                            postgresSecret:
                              title: PostgreSQL password
                              type: string
                              description: secret to use for PostgreSQL credentials 
                          required:
                          - postgresSecret

        Redis:
          type: object
          required:
          - enableRedis
          properties:
            enableRedis:
              title: Enable Redis?
              type: string
              enum:
                - "yes"
                - "no"
              #TODO só está aceitando "no"
              default: "no"
          dependencies:
            enableRedis:
              oneOf:
              - properties:
                  enableRedis:
                    enum:
                    - "no"
              - properties:
                  enableRedis:
                    enum:
                    - "yes"
                  redis_version:
                    title: Version
                    type: string
                    enum:
                      - 6.2.6-debian-10-r21
                      - 6.2.6-debian-10-r179
                    enumNames:
                      - "6.2.6-debian-10-r21"
                      - "6.2.6-debian-10-r179"
                    default: 6.2.6-debian-10-r179
                    required:
                    - redis_version
                  redisPersistenceSize:
                    title: Persistence Size
                    type: string
                    enum:
                      - 8Gi
                      - 16Gi
                      - 24Gi
                      - 32Gi
                    default: 8Gi
                    required:
                    - redisPersistenceSize

                  RedisAuth:
                    title: Redis Authentication
                    type: object
                    required:
                    - RedisAuth
                    properties:
                      enableRedisAuth:
                        title: Enable Redis Authentication?
                        type: string
                        enum:
                          - "yes"
                          - "no"
                        default: "no"
                    dependencies:
                      enableRedisAuth:
                        oneOf:
                        - properties:
                            enableRedisAuth:
                              enum:
                              - "no"
                        - properties:
                            enableRedisAuth:
                              enum:
                              - "yes"
                            RedisSecret:
                              title: Redis password
                              type: string
                              description: secret to use for Redis credentials 

    - title: Choose a location  
      required:
        - repoUrl
      properties: 
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: template
      name: Fetch template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }} 
          javaVersion: ${{ parameters.javaVersion }}
          country: ${{ parameters.country }}
          application_name: ${{ parameters.application_name }}
          k8s_pod_replicas: ${{ parameters.k8s_pod_replicas }}
          k8s_svc_port: ${{ parameters.k8s_svc_port }}
          k8s_namespace: ${{ parameters.k8s_namespace }}
          repoApplicationName: ${{ (parameters.repoUrl | parseRepoUrl).repo }}
          health_check: ${{ parameters.health_check }}
          envs: ${{ parameters.envs }}
          secrets: ${{ parameters.secrets }}
          kind: ${{ parameters.kind_resource }}
          ingress_conditional: ${{ parameters.ingress.ingress_conditional }}
          k8s_ingress_host: ${{ parameters.ingress.k8s_ingress_host }}
          k8s_ingress_class: ${{ parameters.ingress.k8s_ingress_class }}
          enablePostgreSQL: ${{ parameters.PostgreSQL.enablePostgreSQL }}
          postgresql_version: ${{ parameters.PostgreSQL.postgresql_version }}
          postgresqlPersistenceSize: ${{ parameters.PostgreSQL.postgresqlPersistenceSize }}
          enablePostgresqlUser: ${{ parameters.PostgreSQL.PostgresqlUser.enablePostgresqlUser }}
          postgresSecret: ${{ parameters.PostgreSQL.PostgresqlUser.postgresSecret }}
          enableRedis: ${{ parameters.Redis.enableRedis }}
          redis_version: ${{ parameters.Redis.redis_version }}
          redisPersistenceSize: ${{ parameters.Redis.redisPersistenceSize }}
          enableRedisAuth: ${{ parameters.Redis.RedisAuth.enableRedisAuth }}
          RedisSecret: ${{ parameters.Redis.RedisAuth.RedisSecret }}
          imageAutomation: ${{ parameters.imageAutomation }}

    # - id: publish-pull-request-test-hr
    #   name: Publish Pull Request
    #   action: publish:github:pull-request
    #   input:
    #     targetPath: 'packages'
    #     sourcePath: 'helm-release'
    #     repoUrl: 'github.com?owner=beatrizafonso&repo=backstage-demo'
    #     title: 'Create new trigger: ${{ (parameters.repoUrl | parseRepoUrl).repo }}'
    #     branchName: 'create-trigger-${{ (parameters.repoUrl | parseRepoUrl).repo }}'
    #     description: |
    #       # New trigger: ${{ parameters.repo-name }}

    #       {{#if parameters.shortDescription}}
    #       ${{ parameters.shortDescription }}
    #       {{/if}}

    - id: publishrepo
      name: Publish New Git Repository
      action: publish:github
      input:
        sourcePath: 'main'
        allowedHosts:
          - github.com
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: createstaging
      name: Creating staging Branch
      action: publish:github:pull-request
      input:
        sourcePath: 'staging'
        owner: ${{ parameters.owner }}
        repoUrl: ${{ parameters.repoUrl }}
        title: 'Creating staging branch'
        branchName: 'staging'
        description: |
          Staging environment created. 
          Please, close this Pull Request

    - id: publish-pull-request-helm-release
      name: Publish Pull Request helm-release.yaml
      action: publish:github:pull-request
      input:
        targetPath: 'kubernetes/clusters/hmg-dev/releases'
        sourcePath: 'helm-release'
        repoUrl: 'github.com?owner=winecombr&repo=devops'
        title: '[hmg-dev | ${{parameters.component_id}}] Add helm-release.yaml'
        branchName: 'winehub-create-hr-${{ (parameters.repoUrl | parseRepoUrl).repo }}'
        description: |
          New Deployment: ${{ parameters.component_id }}
          Repo Name: ${{ (parameters.repoUrl | parseRepoUrl).repo }}

        # a descrição nao está funcionando

    - id: cloneMain-tf
      name: Clone main.tf file
      action: winecombr:clone:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.name }}
        repoUrl: github.com?owner=winecombr&repo=devops
        repoPath: 'terraform/ci-gcp/main.tf'

    - id: fetch-trigger
      name: Fetch Trigger
      action: fetch:template
      input:
        url: ./trigger
        values:
          # owner: 'beatrizafonso'
          # destination: 'github.com?owner=beatrizafonso&repo=fluxMigration'
          repo_name: ${{ (parameters.repoUrl | parseRepoUrl).repo }}

    - id: publish-pull-request-repo-trigger
      name: Publish Pull Request - Repo Trigger
      action: winecombr:github:pull-request
      input:
        repoName: ${{ (parameters.repoUrl | parseRepoUrl).repo }}
        targetPath: 'terraform/ci-gcp'
        sourcePath: 'terraform/ci-gcp'
        clonedRepoPath: 'terraform/ci-gcp/main.tf'
        owner: 'devops'
        repoUrl: 'github.com?owner=winecombr&repo=devops'
        title: 'Create new trigger: ${{ (parameters.repoUrl | parseRepoUrl).repo }}'
        branchName: 'winehub-create-trigger-${{ (parameters.repoUrl | parseRepoUrl).repo }}'
        description: |
          New trigger: ${{ (parameters.repoUrl | parseRepoUrl).repo }}

          {%- if parameters.description %}
          ${{ parameters.description }}
          {%- endif %}

    - id: publish-pull-request-chart-trigger
      name: Publish Pull Request - Chart Trigger
      action: winecombr:github:pull-request
      input:
        repoName: ${{ (parameters.repoUrl | parseRepoUrl).repo }}
        targetPath: 'terraform/ci-gcp'
        sourcePath: 'terraform/ci-gcp'
        # nao sei se precisa desse targePath e desse sourcePath
        clonedRepoPath: 'terraform/ci-gcp/triggers/winecombr/devops-charts/main.tf'
        owner: 'devops'
        repoUrl: 'github.com?owner=winecombr&repo=devops-charts'
        title: 'Create new trigger: ${{ (parameters.repoUrl | parseRepoUrl).repo }}'
        branchName: 'winehub-create-trigger-${{ (parameters.repoUrl | parseRepoUrl).repo }}'
        description: |
          New trigger: ${{ (parameters.repoUrl | parseRepoUrl).repo }}

          {%- if parameters.description %}
          ${{ parameters.description }}
          {%- endif %}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publishrepo.output.repoContentsUrl }}$
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
      - url: ${{ steps.publish-pull-request.output.remoteUrl }}
        text: 'Go to PR'